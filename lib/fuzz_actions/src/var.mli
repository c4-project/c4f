(* This file is part of c4f.

   Copyright (c) 2018-2022 C4 Project

   c4t itself is licensed under the MIT License. See the LICENSE file in the
   project root for more information.

   Parts of c4t are based on code from the Herdtools7 project
   (https://github.com/herd/herdtools7) : see the LICENSE.herd file in the
   project root for more information. *)

(** Fuzzer actions for manipulating variables. *)

(** Random state required for {!Make}. *)
module Make_payload : sig
  type t =
    { basic_type: C4f_fir.Type.Basic.t
    ; initial_value: C4f_fir.Constant.t
    ; var: C4f_common.Litmus_id.t }
  [@@deriving compare, sexp]

  val quickcheck_observer : t Base_quickcheck.Observer.t
  (** [quickcheck_observer] is an observer for make-payloads. *)

  val quickcheck_shrinker : t Base_quickcheck.Shrinker.t
  (** [quickcheck_shrinker] is an shrinker for make-payloads. *)

  val generator :
       C4f_fuzz.Var.Map.t
    -> gen_scope:C4f_common.Scope.t Base_quickcheck.Generator.t
    -> t Base_quickcheck.Generator.t
  (** [generator vars gen_scope] constructs a Quickcheck generator for
      payloads over the variable map [map] with scopes generated by [scope]. *)
end

(** Fuzzer action that generates a new variable. *)
module Make : C4f_fuzz.Action_types.S with type Payload.t = Make_payload.t

(** Fuzzer action that makes existing local variables volatile. *)
module Volatile :
  C4f_fuzz.Action_types.S with type Payload.t = C4f_common.Litmus_id.t
