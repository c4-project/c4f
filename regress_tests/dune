(library
 (name common)
 (modules common)
 (preprocess
  (pps ppx_jane))
 (libraries
  result
  yojson
  ppx_yojson_conv_lib
  sexplib0
  base
  base.caml
  core
  core.validate
  stdio
  fmt
  common_cmd
  fpath
  travesty
  travesty.base_exts
  plumbing
  c4f.fir
  c4f.common
  c4f.config
  c4f.delitmus
  c4f.fuzz
  c4f.litmus
  c4f.utils))

(executables
 (names
  config
  config_failures
  delitmus
  dump_header
  fuzz_replays
  fuzz_action_list)
 (modules
  config
  config_failures
  delitmus
  dump_header
  fuzz_replays
  fuzz_action_list)
 (preprocess
  (pps ppx_jane))
 (libraries
  result
  yojson
  ppx_yojson_conv_lib
  sexplib0
  base
  base.caml
  core
  core_unix.command_unix
  stdio
  fmt
  common_cmd
  fpath
  travesty
  travesty.base_exts
  plumbing
  c4f.fir
  c4f.common
  c4f.config
  c4f.delitmus
  c4f.litmus_c
  c4f.fuzz
  c4f.fuzz_run
  c4f.litmus
  c4f.utils
  common))

(rule
 (deps
  (glob_files "input/config/valid/*.conf"))
 (action
  (with-stdout-to
   config.output
   (run ./config.exe input))))

(rule
 (alias runtest)
 (action
  (diff config.expected config.output)))

(rule
 (deps
  (glob_files "input/config/failures/*.conf"))
 (action
  (with-stdout-to
   config_failures.output
   (run ./config_failures.exe input))))

(rule
 (alias runtest)
 (action
  (diff config_failures.expected config_failures.output)))

(rule
 (deps
  (glob_files "input/litmus/*.litmus"))
 (action
  (with-stdout-to
   delitmus.output
   (run ./delitmus.exe input))))

(rule
 (alias runtest)
 (action
  (diff delitmus.expected delitmus.output)))

(rule
 (deps
  (glob_files "input/litmus/*.litmus"))
 (action
  (with-stdout-to
   dump_header.output
   (run ./dump_header.exe input))))

(rule
 (alias runtest)
 (action
  (diff dump_header.expected dump_header.output)))

(rule
 (deps
  (glob_files "input/fuzz/replays/*.litmus")
  (glob_files "input/fuzz/replays/*.trace"))
 (action
  (with-stdout-to
   fuzz_replays.output
   (run ./fuzz_replays.exe input))))

(rule
 (alias runtest)
 (action
  (diff fuzz_replays.expected fuzz_replays.output)))

(rule
 (action
  (with-stdout-to
   fuzz_action_list.output
   (run ./fuzz_action_list.exe input))))

(rule
 (alias runtest)
 (action
  (diff fuzz_action_list.expected fuzz_action_list.output)))

(test
 (name dump_stats)
 (modules dump_stats)
 (preprocess
  (pps ppx_jane))
 (libraries
  result
  yojson
  ppx_yojson_conv_lib
  sexplib0
  base
  base.caml
  core
  core_unix.command_unix
  stdio
  fmt
  common_cmd
  fpath
  travesty
  travesty.base_exts
  plumbing
  c4f.fir
  c4f.common
  c4f.config
  c4f.litmus
  c4f.utils
  c4f.litmus_c
  common)
 (action
  (run %{test} input))
 (deps
  (glob_files "input/litmus/*.litmus")))

(test
 (name litmus_failures)
 (modules litmus_failures)
 (preprocess
  (pps ppx_jane))
 (libraries
  result
  yojson
  ppx_yojson_conv_lib
  sexplib0
  base
  base.caml
  core
  core_unix.command_unix
  stdio
  fmt
  common_cmd
  fpath
  travesty
  travesty.base_exts
  plumbing
  c4f.fir
  c4f.common
  c4f.config
  c4f.litmus
  c4f.litmus_c
  c4f.utils
  common)
 (action
  (run %{test} input))
 (deps
  (glob_files "input/litmus/failures/*.litmus")))
